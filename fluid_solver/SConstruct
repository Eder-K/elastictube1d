import os, sys

preciceRoot = os.getenv ('PRECICE_ROOT')
if ( preciceRoot == None ):
   print 'ERROR: Environment variable PRECICE_ROOT not defined!'
   sys.exit(1)
else:
   print 'Using environment variable PRECICE_ROOT =', preciceRoot
  
##### Declare build variables and default values

cppdefines = [
   'PRECICE_USE_MPI',
   'tarch=tarchp2'
]   
cpppath = [
   os.path.join(preciceRoot, 'src')
]    
libpath = [
   os.path.join(preciceRoot, 'build/debug')
]      
libs = [ 
   'precice',   # preCICE library 
   'python2.7', # Python library (shared)
   'lapack',
]

# cxx = 'mpicxx.mpich2' # For systems offering mpicxx compiler
cxx = 'mpic++'      # For systems offering mpic++ compiler

ccflags = []
#ccflags.append('-g3')
ccflags.append('-O3')
ccflags.append('-Wall')

#libpath.append (preciceRoot + '/build/' + buildmode + '-dim2-nompi/')
#libpath.append('/usr/lib/')

##### Setup ostbuild environment and issue builds

env = Environment ( 
   CPPDEFINES = cppdefines,  # defines for preprocessor (#define xyz)
   LIBPATH    = libpath,     # path to libraries used
   LIBS       = libs,        # libraries used (without prefix "lib" and suffix ".a"/".so"/...)
   CPPPATH    = cpppath,     # pathes where the preprocessor should look for files
   CCFLAGS    = ccflags,     # flags for the c/c++ compilers
   CXX        = cxx,         # the c++ compiler that should be used
   ENV        = os.environ   # propagates environment variables to scons  
)
   
env.Program ( 'FluidSolver', ['fluid_solver.cpp', 'fluid_nl.cpp'] )
