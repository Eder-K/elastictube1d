<?xml version="1.0"?>

<precice-configuration>

  <log-filter component="" target="debug" switch="off" />
  <log-filter component="" target="info" switch="on" />
  <log-filter target="debug" component="precice::cplscheme::impl::IQNILSPostProcessing" switch="on" />
  <log-filter target="debug" component="precice::cplscheme::impl::MVQNPostProcessing" switch="on" />
  <log-filter target="debug" component="precice::cplscheme::impl::BaseQNPostProcessing" switch="on" />
  <log-filter target="debug" component="precice::cplscheme::impl::MMPostProcessing" switch="on" />
  <log-filter target="debug" component="precice::cplscheme::ImplicitCouplingScheme" switch="on" />
  
  
  <log-output column-separator=" | " log-time-stamp="no" 
              log-time-stamp-human-readable="yes" log-machine-name="no" 
              log-message-type="no" log-trace="yes" />
  
  <solver-interface dimensions="2">
    
    <!-- Data fields that are exchanged between the solvers -->
    <!-- fine model coupling data -->
    <data:vector name="Stresses"/>
    <data:vector name="Displacements"/>

    <!-- coarse model coupling data -->
    <data:vector name="Coarse_Stresses"/>
    <data:vector name="Coarse_Displacements"/>


    <!-- A common mesh that uses these data fields -->
    <!-- fine model meshes -->
    <mesh name="Fluid_Nodes">
      <use-data name="Displacements"/>
      <use-data name="Stresses"/>
      <use-data name="Coarse_Displacements"/>
      <use-data name ="Coarse_Stresses"/>
    </mesh>

    <mesh name="Structure_Nodes">
      <use-data name="Displacements"/>   
      <use-data name="Stresses"/>
      <use-data name="Coarse_Displacements"/>
      <use-data name ="Coarse_Stresses"/>
    </mesh>

    <!-- Communication method, use TCP sockets -->
    <m2n:sockets from="FLUID_1D" to="STRUCTURE_1D" />

    <!-- Represents each solver using preCICE. In a coupled simulation, two participants have to be
         defined. The name of the participant has to match the name given on construction of the
         precice::SolverInterface object used by the participant. -->
    
    <participant name="FLUID_1D">
      <!-- fine model -->
      <!-- Makes the named mesh available to the participant. Mesh is provided by the solver directly. -->
      <use-mesh name="Fluid_Nodes" provide="yes"/>
      <use-mesh name="Structure_Nodes" from="STRUCTURE_1D"/>
      <!-- Define input/output of the solver.  -->
      <write-data name="Stresses" mesh="Fluid_Nodes"/>
      <read-data  name="Displacements" mesh="Fluid_Nodes"/>
      
      <mapping:nearest-projection direction="write" from="Fluid_Nodes" to="Structure_Nodes" constraint="consistent" timing="initial"/>
      <mapping:nearest-projection direction="read"  from="Structure_Nodes" to="Fluid_Nodes" constraint="consistent" timing="initial"/>
      
      <write-data name="Coarse_Stresses" mesh="Fluid_Nodes"/>
      <read-data  name="Coarse_Displacements" mesh="Fluid_Nodes"/>

<!--      <export:vtk timestep-interval="1" directory="output/"/> -->
    </participant>
    
    <participant name="STRUCTURE_1D">
      <!-- fine model -->
      <!-- Makes the named mesh available to the participant. Mesh is provided by the solver directly. -->
      <use-mesh name="Structure_Nodes" provide="yes"/>
      <!-- Define input/output of the solver.  -->
      <write-data name="Displacements" mesh="Structure_Nodes"/>
      <read-data  name="Stresses"      mesh="Structure_Nodes"/>

      <write-data name="Coarse_Displacements" mesh="Structure_Nodes"/>
      <read-data  name="Coarse_Stresses"      mesh="Structure_Nodes"/>

<!--      <export:vtk timestep-interval="1" directory="output/"/> -->
    </participant>

    <coupling-scheme:serial-implicit>
      <participants first="FLUID_1D" second="STRUCTURE_1D"/>
      <timestep-length value="1e-2" valid-digits="8"/>
      <max-time value="1.0"/>
     <!-- <checkpoint timestep-interval="10"/> -->
      <max-iterations value="100"/>
      <extrapolation-order value="0"/>

      <!-- fine model exchange data and associated convergence measures -->
      <exchange data="Displacements" mesh="Structure_Nodes" from="STRUCTURE_1D" to="FLUID_1D"  initialize="true"/>
      <exchange data="Stresses"      mesh="Structure_Nodes" from="FLUID_1D" to="STRUCTURE_1D" />
      <relative-convergence-measure  limit="1e-4" data="Stresses"        mesh="Structure_Nodes" level="0" /> 
      <relative-convergence-measure  limit="1e-4" data="Displacements"   mesh="Structure_Nodes" level="0" />

      <!-- coarse model exchange data and associated convergence measures -->
      <exchange data="Coarse_Displacements" mesh="Structure_Nodes" from="STRUCTURE_1D" to="FLUID_1D"  initialize="true"/>
      <exchange data="Coarse_Stresses"      mesh="Structure_Nodes" from="FLUID_1D" to="STRUCTURE_1D"/>  
      <!-- convergence criterion for coarse coupling data needs to be more restrictive -->
      <relative-convergence-measure  limit="1e-5" data="Coarse_Stresses"        mesh="Structure_Nodes"  level="1" />  
      <relative-convergence-measure  limit="1e-5" data="Coarse_Displacements"   mesh="Structure_Nodes"  level="1" />
 
      <post-processing:MM> 
          <!-- PostProcessing always done on the second solver -->
          <data name="Displacements" mesh="Structure_Nodes" scaling="1.0">
          <!--<data name="Stresses" mesh="Structure_Nodes" scaling="1e7">  -->
          <estimate-jacobian value="false"/> 
          <max-used-iterations value="50"/>
          <timesteps-reused value="0"/>
          <filter name="QR1-filter" />
          <singularity-limit value="1e-13"/>
          
          <post-processing:IQN-ILS>           
            <data mesh="Structure_Nodes" name="Coarse_Displacements" />
            <!--<data mesh="Structure_Nodes" name="Coarse_Stresses" scaling="1e7" />-->
            <initial-relaxation value="0.001" />
            <max-used-iterations value="50" />
            <timesteps-reused value="0" />
            <filter name="QR1-filter" />
            <singularity-limit value="1e-13" />
          </post-processing:IQN-ILS>

        </post-processing:MM>

      </coupling-scheme:serial-implicit>
      
    </solver-interface>
    
  </precice-configuration>
            
